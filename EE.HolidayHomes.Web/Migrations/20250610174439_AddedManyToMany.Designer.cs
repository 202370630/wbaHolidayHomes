// <auto-generated />
using System;
using EE.HolidayHomes.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EE.HolidayHomes.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250610174439_AddedManyToMany")]
    partial class AddedManyToMany
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EE.HolidayHomes.Core.Entities.HolidayHome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("HomeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("HomeTypeId");

                    b.HasIndex("LocationId");

                    b.ToTable("HolidayHomes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HomeTypeId = 2,
                            Image = "house1.jpg",
                            LocationId = 1,
                            Name = "The Villa",
                            Price = 120.50m
                        },
                        new
                        {
                            Id = 2,
                            HomeTypeId = 1,
                            Image = "house2.jpg",
                            LocationId = 2,
                            Name = "The Cottage",
                            Price = 250.55m
                        },
                        new
                        {
                            Id = 3,
                            HomeTypeId = 4,
                            Image = "house3.jpg",
                            LocationId = 3,
                            Name = "The farmhouse",
                            Price = 350.50m
                        },
                        new
                        {
                            Id = 4,
                            HomeTypeId = 3,
                            Image = "house4.jpg",
                            LocationId = 4,
                            Name = "The seaside house",
                            Price = 350.55m
                        });
                });

            modelBuilder.Entity("EE.HolidayHomes.Core.Entities.HomeProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomeProperties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rural"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Seaside"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Luxury"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Budget"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Family"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Business"
                        });
                });

            modelBuilder.Entity("EE.HolidayHomes.Core.Entities.HomeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("HomeTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cottage"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Villa"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Appartment"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Room"
                        });
                });

            modelBuilder.Entity("EE.HolidayHomes.Core.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lapscheure"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Izegem"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Blankenberge"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sint-Pieterskapelle"
                        });
                });

            modelBuilder.Entity("HolidayHomeHomeProperty", b =>
                {
                    b.Property<int>("HolidayHomesId")
                        .HasColumnType("int");

                    b.Property<int>("HomePropertiesId")
                        .HasColumnType("int");

                    b.HasKey("HolidayHomesId", "HomePropertiesId");

                    b.HasIndex("HomePropertiesId");

                    b.ToTable("HolidayHomeHomeProperty");
                });

            modelBuilder.Entity("EE.HolidayHomes.Core.Entities.HolidayHome", b =>
                {
                    b.HasOne("EE.HolidayHomes.Core.Entities.HomeType", "HomeType")
                        .WithMany("HolidayHomes")
                        .HasForeignKey("HomeTypeId");

                    b.HasOne("EE.HolidayHomes.Core.Entities.Location", "Location")
                        .WithMany("HolidayHomes")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeType");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("HolidayHomeHomeProperty", b =>
                {
                    b.HasOne("EE.HolidayHomes.Core.Entities.HolidayHome", null)
                        .WithMany()
                        .HasForeignKey("HolidayHomesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EE.HolidayHomes.Core.Entities.HomeProperty", null)
                        .WithMany()
                        .HasForeignKey("HomePropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EE.HolidayHomes.Core.Entities.HomeType", b =>
                {
                    b.Navigation("HolidayHomes");
                });

            modelBuilder.Entity("EE.HolidayHomes.Core.Entities.Location", b =>
                {
                    b.Navigation("HolidayHomes");
                });
#pragma warning restore 612, 618
        }
    }
}
